Movie metadata:
	- Populated from the internet:
		- Photo or two
		- Genres
		- IMDB rating
		- Description?
		- Link to trailer?
	- My own tags (unseen)
	- My own rating
	
	
Desired functionality:
	- Display movies in a dense fashion
	- Filter based on tags/ratings
	- Search for a specific movie
	- Default config file to autoload directory
	
	
poster API: https://codepen.io/pixelnik/pen/pgWQBZ
https://developer.themoviedb.org/docs


Inputting movies:
	- drag and drop into folder
	- when program started, kick off new thread to do the following:
		- search movies and identify new ones
		- query DB and retrieve metadata
		- update movie as retrieved - tag on the file?
		- update the view so data propagates
	- if no match: popup presented to select one based on release dates/genres/desc
		
Flow:
	- Tiled movie posters, scaled to the same size. Probably makes sense for them to be buttons
	- Hover text shows genres/tags
	- Click triggers a popup with more images, full description, and a button to kickstart VLC



Local storage (located in movie dir):
.MovieManagerMetadata:
	- File: Serialized map from filename -> ID
	- Dir: Metadata
		- Dir: <ID>
			- File[s]: photo<index>.jpg
			- File: data.txt (description, release date, genres, etc)

Up next:
	- link UI to metadata
		- finish implementing popup
		- add handling for changing shelf dir
		- look for images "movieId.jpg" in the metadata folder
	- create background task and get data!


		
Additional config options:
	- default torrent directory
	- default shelf directory
	- max number of photos per movie
		
		
		
Add in the future?
	- my own ratings/ticks
	- trailer links
	- rating from API
	- multiple images
	- sort by release date/ratings
	- prompt the user to load backup SER file if index fails to load
	- path validation
	- file manager option to move movie into shelf dir
	- file tags ("to watch", "No Metadata", "New" tag that expires after 3mo, 720p?)
	- support for series
	- clean out metadata that doesn't match current file set
	- add support for bad result parsing from DB (wrong metadata)
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		